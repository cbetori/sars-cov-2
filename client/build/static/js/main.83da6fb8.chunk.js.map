{"version":3,"sources":["components/Disclaimer.js","components/DatePicker.tsx","components/Options.js","components/Summary.js","components/Tables.js","App.js","State.js","serviceWorker.js","index.js"],"names":["Disclaimer","props","id","className","href","DatePicker","generatePicker","dayjsGenerateConfig","Options","useState","provinceText","provinceTextSet","countryText","countryTextSet","onSearch","countries","state","countryList","map","e","i","Option","key","value","states","stateList","result","country","countryValue","push","province","changeCountryStateValue","type","stateValueSet","undefined","countryValueSet","onChange","curValue","document","getElementById","split","getElementsByTagName","style","setProperty","changeTheme","theme","picker","defaultValue","dayjs","dateValue","s","y","format","dateValueSet","handleDateChange","showSearch","optionFilterProp","Summary","title","totals","totalCases","totalRecovered","totalDeaths","Tables","tableArray","tableArraySet","window","innerWidth","tableWidth","tableWidthSet","compare","a","b","aState","confirmed","bState","comparison","handleTables","stateValue","newArray","tableData","length","tempArray","region","cities","sort","tableDivCounty","handleCountyTables","x","tableDivState","handleStateTables","tableDivCountry","handleCountryTables","formatNumber","num","toString","replace","array","tblHeight","rowHeight","width","header","height","headerHeight","rowCount","rowGetter","index","label","dataKey","cellDataGetter","rowData","useEffect","addEventListener","App","options","tables","State","subtract","dataCustomeDate","countryListSet","stateListSet","tableDataSet","totalsData","totalsDataSet","totalsSet","handleFetch","url","fetch","method","then","response","json","data","c","p","d","name","handleProvinceList","handleTotals","storage","totalData","localStorage","setItem","JSON","stringify","handleLocalData","local","deaths","recovered","t","getItem","parse","date","defaultData","Boolean","location","hostname","match","ReactDOM","render","Fragment","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.83da6fb8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Disclaimer = (props) => {\n\treturn (\n\t\t<div id='disclaimer'>\n\t\t\t<div id='disclaimer-detail'>\n\t\t\t\tDisclaimer: I do not own nor do I maintain this data. To ensure you are\n\t\t\t\tgetting the best information please look to authoritative sources.\n\t\t\t</div>\n\t\t\t<div id='disclaimer-links'>\n\t\t\t\t<div className='disclaimer-link-head'>Data source:</div>\n\t\t\t\t<a\n\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\thref='https://github.com/CSSEGISandData/COVID-19'\n\t\t\t\t>\n\t\t\t\t\tJohn Hopkins\n\t\t\t\t</a>\n\t\t\t\t<div className='disclaimer-link-head'>API Source:</div>\n\t\t\t\t<a\n\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\thref='https://rapidapi.com/axisbits-axisbits-default/api/covid-19-statistics/endpoints'\n\t\t\t\t>\n\t\t\t\t\tRapidAPI - Axisbits\n\t\t\t\t</a>\n\t\t\t\t<div id='disclaimer-authoritative'>\n\t\t\t\t\t<div className='disclaimer-link-head'>\n\t\t\t\t\t\tAdditional Support on Sars-Cov-2:\n\t\t\t\t\t</div>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\t\thref='                https://www.cdc.gov/coronavirus/2019-nCov/index.html'\n\t\t\t\t\t>\n\t\t\t\t\t\tCDC\n\t\t\t\t\t</a>\n\t\t\t\t\t,\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\t\thref='https://www.who.int/emergencies/diseases/novel-coronavirus-2019'\n\t\t\t\t\t>\n\t\t\t\t\t\tWHO\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Disclaimer\n","//This is required by Antd to avoid moment which was adding to bundle size.\n\nimport { Dayjs } from 'dayjs'\nimport dayjsGenerateConfig from 'rc-picker/lib/generate/dayjs'\nimport generatePicker from 'antd/es/date-picker/generatePicker'\nimport 'antd/es/date-picker/style/index'\n\nconst DatePicker = generatePicker<Dayjs>(dayjsGenerateConfig)\n\nexport default DatePicker\n","import React, { useState } from 'react'\nimport Select from 'antd/es/select'\nimport Switch from 'antd/es/switch'\nimport dayjs from 'dayjs'\nimport DatePicker from './DatePicker'\n\nconst Options = (props) => {\n\tconst defaultProvinceValue = 'Select a state/province'\n\tconst [provinceText, provinceTextSet] = useState(defaultProvinceValue)\n\tconst defaultCountryValue = 'Select a Country'\n\tconst [countryText, countryTextSet] = useState(defaultCountryValue)\n\n\t//Used to handle theme. Simply changes href of link component in index.html\n\t//There should be a better way of handle apart from fully reloading css\n\tlet changeTheme = () => {\n\t\tlet curValue = document.getElementById('theme').href\n\t\tcurValue = curValue.split('/')[3]\n\t\tif (curValue === 'antd.css') {\n\t\t\tdocument.getElementById('theme').href = 'antd.dark.css'\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--scrolltrack', '#141414')\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--border-color', '#303030')\n\t\t} else {\n\t\t\tdocument.getElementById('theme').href = 'antd.css'\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--scrolltrack', 'white')\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--border-color', '#f0f0f0')\n\t\t}\n\t}\n\n\tfunction onSearch() {}\n\tlet countries = props.state.countryList.map((e, i) => {\n\t\treturn (\n\t\t\t<Select.Option key={i} value={e}>\n\t\t\t\t{e}\n\t\t\t</Select.Option>\n\t\t)\n\t})\n\n\tlet states = props.state.stateList.map((e, i) => {\n\t\tlet result = []\n\t\tif (e.country === props.state.countryValue) {\n\t\t\tresult.push(\n\t\t\t\t<Select.Option key={i} value={e.province}>\n\t\t\t\t\t{e.province}\n\t\t\t\t</Select.Option>\n\t\t\t)\n\t\t}\n\t\treturn result\n\t})\n\n\tlet handleDateChange = (e, s) => {\n\t\tlet y = dayjs(s).format('YYYY-MM-DD')\n\t\tprops.state.dateValueSet(y)\n\t}\n\n\tlet changeCountryStateValue = (e, type) => {\n\t\tif (type === 'country') {\n\t\t\tif (e === 'All') {\n\t\t\t\tprops.state.stateValueSet(undefined)\n\t\t\t\tprops.state.countryValueSet(undefined)\n\t\t\t\tcountryTextSet(defaultCountryValue)\n\t\t\t\tprovinceTextSet(defaultProvinceValue)\n\t\t\t} else {\n\t\t\t\tprops.state.countryValueSet(e)\n\t\t\t\tcountryTextSet(e)\n\t\t\t\tprops.state.stateValueSet(undefined)\n\t\t\t\tprovinceTextSet(defaultProvinceValue)\n\t\t\t}\n\t\t} else {\n\t\t\tif (e === 'All') {\n\t\t\t\tprops.state.stateValueSet(undefined)\n\t\t\t\tprovinceTextSet(defaultProvinceValue)\n\t\t\t} else {\n\t\t\t\tprops.state.stateValueSet(e)\n\t\t\t\tprovinceTextSet(e)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div id='options'>\n\t\t\t<div id='options-theme'>\n\t\t\t\t<Switch onChange={() => changeTheme()} />\n\t\t\t\tLight/Dark\n\t\t\t</div>\n\t\t\t<DatePicker\n\t\t\t\ttheme='dark'\n\t\t\t\tpicker='date'\n\t\t\t\tdefaultValue={dayjs(props.state.dateValue, 'YYYY-MM-DD')}\n\t\t\t\tonChange={(e, s) => handleDateChange(e, s)}\n\t\t\t\tformat={'YYYY-MM-DD'}\n\t\t\t\tclassName='options-inputs'\n\t\t\t/>\n\t\t\t<Select\n\t\t\t\tshowSearch\n\t\t\t\toptionFilterProp='children'\n\t\t\t\tonSearch={onSearch}\n\t\t\t\tvalue={countryText}\n\t\t\t\tclassName='options-inputs'\n\t\t\t\tonChange={(e) => changeCountryStateValue(e, 'country')}\n\t\t\t>\n\t\t\t\t<Select.Option value={'All'}>All</Select.Option>\n\t\t\t\t{countries}\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\t\tshowSearch\n\t\t\t\toptionFilterProp='children'\n\t\t\t\tonSearch={onSearch}\n\t\t\t\tvalue={provinceText}\n\t\t\t\tclassName='options-inputs'\n\t\t\t\tonChange={(e) => changeCountryStateValue(e, 'state')}\n\t\t\t>\n\t\t\t\t<Select.Option value={'All'}>All</Select.Option>\n\t\t\t\t{states}\n\t\t\t</Select>\n\t\t</div>\n\t)\n}\n\nexport default Options\n","import React from 'react'\nimport { Card, Statistic } from 'antd'\n\nconst Summary = (props) => {\n\treturn (\n\t\t<div id='summary'>\n\t\t\t<Card id='summary-card'>\n\t\t\t\t<Statistic title='Total Cases' value={props.totals.totalCases} />\n\t\t\t\t<Statistic title='Total Recoverd' value={props.totals.totalRecovered} />\n\t\t\t\t<Statistic title='Total Deaths' value={props.totals.totalDeaths} />\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default Summary\n","import React, { useEffect, useState } from 'react'\nimport { Column, Table } from 'react-virtualized'\n\nconst Tables = (props) => {\n\tconst [tableArray, tableArraySet] = useState([])\n\tconst [tableWidth, tableWidthSet] = useState(window.innerWidth * 0.75)\n\n\t//Used to order table data by confirmations of cases\n\tfunction compare(a, b) {\n\t\tlet aState = a.confirmed\n\t\tlet bState = b.confirmed\n\t\tlet comparison = 0\n\t\tif (aState > bState) {\n\t\t\tcomparison = -1\n\t\t} else if (aState < bState) {\n\t\t\tcomparison = 1\n\t\t}\n\t\treturn comparison\n\t}\n\n\t/////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//Create proper array\n\t//IF STATE AND PROVINENCE ARE CHOSEN\n\tconst handleCountyTables = () => {\n\t\tlet newArray = []\n\t\tfor (let i = 0; i < props.state.tableData.length; i++) {\n\t\t\tlet tempArray = []\n\t\t\tif (\n\t\t\t\tprops.state.tableData[i].country === props.state.countryValue &&\n\t\t\t\tprops.state.tableData[i].province === props.state.stateValue\n\t\t\t) {\n\t\t\t\tif (props.state.tableData[i].region.cities.length === 0) {\n\t\t\t\t\ttempArray.push(props.state.tableData[i])\n\t\t\t\t} else {\n\t\t\t\t\ttempArray = props.state.tableData[i].region.cities\n\t\t\t\t}\n\t\t\t\ttempArray.sort(compare)\n\t\t\t\tlet result = tableDivCounty(tempArray, i)\n\t\t\t\tnewArray.push(result)\n\t\t\t}\n\t\t}\n\t\treturn newArray\n\t}\n\n\t//IF JUST STATE/PROVINENCE IS CHOSEN\n\tconst handleStateTables = () => {\n\t\tlet newArray = []\n\t\tfor (let i = 0; i < props.state.stateList.length; i++) {\n\t\t\tlet tempArray = []\n\t\t\tfor (let x = 0; x < props.state.tableData.length; x++) {\n\t\t\t\tif (\n\t\t\t\t\tprops.state.tableData[x].province ===\n\t\t\t\t\t\tprops.state.stateList[i].province &&\n\t\t\t\t\tprops.state.countryValue === props.state.stateList[i].country\n\t\t\t\t) {\n\t\t\t\t\tif (props.state.tableData[x].region.cities.length === 0) {\n\t\t\t\t\t\ttempArray.push(props.state.tableData[x])\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttempArray = props.state.tableData[x].region.cities\n\t\t\t\t\t}\n\t\t\t\t\ttempArray.sort(compare)\n\t\t\t\t\tlet result = tableDivState(tempArray, x)\n\t\t\t\t\tnewArray.push(result)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn newArray\n\t}\n\t//IF NO STATE OR PROVINENCE ARE CHOSEN (GLOBAL VIEW)\n\tconst handleCountryTables = () => {\n\t\tlet newArray = []\n\t\tfor (let i = 0; i < props.state.countryList.length; i++) {\n\t\t\tlet tempArray = []\n\t\t\tfor (let x = 0; x < props.state.tableData.length; x++) {\n\t\t\t\tif (props.state.tableData[x].country === props.state.countryList[i]) {\n\t\t\t\t\ttempArray.push(props.state.tableData[x])\n\t\t\t\t}\n\t\t\t}\n\t\t\ttempArray.sort(compare)\n\t\t\tlet result = tableDivCountry(tempArray, i)\n\t\t\tnewArray.push(result)\n\t\t}\n\t\t// tableArraySet(newArray)\n\t\treturn newArray\n\t\t// createUniqueArray('country_region')\n\t}\n\t/////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//Determine how to filter data\n\tconst handleTables = () => {\n\t\tif (\n\t\t\tprops.state.countryValue !== undefined &&\n\t\t\tprops.state.stateValue !== undefined\n\t\t) {\n\t\t\treturn handleCountyTables()\n\t\t} else if (\n\t\t\tprops.state.countryValue !== undefined &&\n\t\t\tprops.state.stateValue === undefined\n\t\t) {\n\t\t\treturn handleStateTables()\n\t\t} else if (\n\t\t\tprops.state.countryValue === undefined &&\n\t\t\tprops.state.stateValue === undefined\n\t\t) {\n\t\t\treturn handleCountryTables()\n\t\t}\n\t}\n\n\t//Cleans up numbers in table to add commas\n\tconst formatNumber = (num) => {\n\t\ttry {\n\t\t\treturn num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n\t\t} catch {\n\t\t\treturn num\n\t\t}\n\t}\n\n\t//The tables have different columns based on what filters are picked.\n\tconst tableDivCountry = (array, key) => {\n\t\tlet rowHeight = 30\n\t\tlet tblHeight\n\t\tif (array.length === 1) {\n\t\t\ttblHeight = 80\n\t\t} else {\n\t\t\ttblHeight = 30\n\t\t}\n\t\tif (window.innerWidth < 600) {\n\t\t\ttblHeight = tblHeight / 1.5\n\t\t\trowHeight = rowHeight / 1.5\n\t\t}\n\t\ttry {\n\t\t\treturn (\n\t\t\t\t<div key={key} className='tables-individual'>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName='tables-virtualized'\n\t\t\t\t\t\twidth={tableWidth}\n\t\t\t\t\t\theader={'Country'}\n\t\t\t\t\t\theight={array.length * tblHeight}\n\t\t\t\t\t\theaderHeight={50}\n\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\trowCount={array.length}\n\t\t\t\t\t\trowGetter={({ index }) => array[index]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Column width={tableWidth / 5} label='Country' dataKey='country' />\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Province / State'\n\t\t\t\t\t\t\tdataKey='province'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Confirmed'\n\t\t\t\t\t\t\tdataKey='confirmed'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Active'\n\t\t\t\t\t\t\tdataKey='active'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Deaths'\n\t\t\t\t\t\t\tdataKey='deaths'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} catch {}\n\t}\n\n\tconst tableDivState = (array, key) => {\n\t\tlet rowHeight = 30\n\t\tlet tblHeight\n\t\tif (array.length === 1) {\n\t\t\ttblHeight = 80\n\t\t} else {\n\t\t\ttblHeight = 30\n\t\t}\n\t\tif (window.innerWidth < 600) {\n\t\t\ttblHeight = tblHeight / 1.5\n\t\t\trowHeight = rowHeight / 1.5\n\t\t}\n\t\ttry {\n\t\t\treturn (\n\t\t\t\t<div key={key} className='tables-individual'>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName='tables-virtualized'\n\t\t\t\t\t\twidth={tableWidth}\n\t\t\t\t\t\theader={'Country'}\n\t\t\t\t\t\theight={array.length * tblHeight}\n\t\t\t\t\t\theaderHeight={50}\n\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\trowCount={array.length}\n\t\t\t\t\t\trowGetter={({ index }) => array[index]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Province / State'\n\t\t\t\t\t\t\tdataKey='province'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column width={tableWidth / 6} label='County' dataKey='name' />\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Confirmed'\n\t\t\t\t\t\t\tdataKey='confirmed'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Deaths'\n\t\t\t\t\t\t\tdataKey='deaths'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} catch {}\n\t}\n\n\tconst tableDivCounty = (array, key) => {\n\t\tlet rowHeight = 30\n\t\tlet tblHeight\n\t\tif (array.length === 1) {\n\t\t\ttblHeight = 80\n\t\t} else {\n\t\t\ttblHeight = 30\n\t\t}\n\n\t\tif (window.innerWidth < 600) {\n\t\t\ttblHeight = tblHeight / 1.5\n\t\t\trowHeight = rowHeight / 1.5\n\t\t}\n\t\ttry {\n\t\t\treturn (\n\t\t\t\t<div key={key} className='tables-individual'>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName='tables-virtualized'\n\t\t\t\t\t\twidth={tableWidth}\n\t\t\t\t\t\theader={'Country'}\n\t\t\t\t\t\theight={array.length * tblHeight}\n\t\t\t\t\t\theaderHeight={50}\n\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\trowCount={array.length}\n\t\t\t\t\t\trowGetter={({ index }) => array[index]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Column width={tableWidth / 4} label='County' dataKey='name' />\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 4}\n\t\t\t\t\t\t\tlabel='Confirmed'\n\t\t\t\t\t\t\tdataKey='confirmed'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 4}\n\t\t\t\t\t\t\tlabel='Deaths'\n\t\t\t\t\t\t\tdataKey='deaths'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} catch {}\n\t}\n\n\tuseEffect(() => {\n\t\ttableArraySet(handleTables())\n\t}, [props])\n\n\twindow.addEventListener('resize', () => {\n\t\ttableWidthSet(window.innerWidth * 0.75)\n\t})\n\n\treturn <div id='tables'>{tableArray}</div>\n}\n\nexport default Tables\n","import React from 'react'\nimport Disclaimer from './components/Disclaimer'\nimport Options from './components/Options'\nimport Summary from './components/Summary'\nimport Tables from './components/Tables'\n\nconst App = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<Disclaimer />\n\t\t\t<Options state={props.state.options} />\n\t\t\t<Summary totals={props.state.totals} />\n\t\t\t<Tables state={props.state.tables} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React, { useEffect, useState } from 'react'\nimport App from './App'\nimport dayjs from 'dayjs'\n\nconst State = () => {\n\t//API with information from previous day. The newest information always exists for yesterday.\n\tlet y = dayjs().subtract(1, 'days').format('YYYY-MM-DD')\n\n\tconst [dateValue, dateValueSet] = useState(y)\n\tconst dataDefault = '/api/default'\n\tconst dataCustomeDate = '/api/default/data=' + dateValue\n\n\tconst [countryList, countryListSet] = useState([])\n\tconst [stateList, stateListSet] = useState([])\n\n\tconst [countryValue, countryValueSet] = useState()\n\tconst [stateValue, stateValueSet] = useState()\n\n\tconst [tableData, tableDataSet] = useState([])\n\tconst [totalsData, totalsDataSet] = useState({})\n\tconst [totals, totalsSet] = useState({})\n\n\t//Use to order an array of objects, in this case its by state/province value\n\t//Updates stateList\n\tlet compare = (a, b) => {\n\t\tlet aState = a.province\n\t\tlet bState = b.province\n\t\tlet comparison = 0\n\t\tif (aState > bState) {\n\t\t\tcomparison = 1\n\t\t} else if (aState < bState) {\n\t\t\tcomparison = -1\n\t\t}\n\t\treturn comparison\n\t}\n\n\t//Creates an array that holds unique values of both province and country\n\tlet handleProvinceList = (d) => {\n\t\ttry {\n\t\t\tlet result = d.map((e) => {\n\t\t\t\tif (e.region.province === '') {\n\t\t\t\t\treturn { country: e.region.name, province: e.region.name }\n\t\t\t\t} else {\n\t\t\t\t\treturn { country: e.region.name, province: e.region.province }\n\t\t\t\t}\n\t\t\t})\n\t\t\tlet p = result.sort(compare)\n\t\t\treturn p\n\t\t} catch {}\n\t}\n\n\t//Looks at localstorage. On error it does a fetch for the most current data\n\t//If localstoage has values and if dateValue === localStorage date then localStorage information is used\n\t//This fires only when the dateValue changes\n\tlet defaultData = () => {\n\t\tlet local = localStorage.getItem('storage')\n\t\tlocal = JSON.parse(local)\n\t\ttry {\n\t\t\tif (local.data[0].date === dateValue) {\n\t\t\t\thandleLocalData(local)\n\t\t\t} else {\n\t\t\t\tif (dateValue === y) {\n\t\t\t\t\thandleFetch(dataDefault)\n\t\t\t\t} else {\n\t\t\t\t\thandleFetch(dataCustomeDate)\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\thandleFetch(dataDefault)\n\t\t}\n\t}\n\n\t//Handles actual fetch request. If they date = yesterday it will pull the newest possible information.\n\t//If dataValue !== yesterday than custome fetch by date is performed.\n\t//Data is stored in localStorage to speed up load for repeat vistors.\n\tlet handleFetch = (url) => {\n\t\tfetch(url, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tif (data.data.data !== null) {\n\t\t\t\t\tlet c = data.countries\n\t\t\t\t\tlet p = handleProvinceList(data.data.data)\n\t\t\t\t\thandleTotals(data.totals, countryValue, stateValue)\n\t\t\t\t\tcountryListSet(c)\n\t\t\t\t\tstateListSet(p)\n\t\t\t\t\ttotalsDataSet(data.totals)\n\t\t\t\t\ttableDataSet(data.data.data)\n\n\t\t\t\t\tlet storage = {\n\t\t\t\t\t\tcountry: c,\n\t\t\t\t\t\tprovince: p,\n\t\t\t\t\t\ttotalData: data.totals,\n\t\t\t\t\t\tdata: data.data.data,\n\t\t\t\t\t}\n\t\t\t\t\tlocalStorage.setItem('storage', JSON.stringify(storage))\n\t\t\t\t\treturn data\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\t//Add all fetch request data to local storage.\n\tlet handleLocalData = (local) => {\n\t\tcountryListSet(local.country)\n\t\tstateListSet(local.province)\n\t\ttotalsDataSet(local.totalData)\n\t\thandleTotals(local.totalData, countryValue, stateValue)\n\t\ttableDataSet(local.data)\n\t}\n\n\t//Handles all total values. Fired when dateValue, stateValue, or countryVaue changes\n\tlet handleTotals = (d, c, s) => {\n\t\ttry {\n\t\t\tlet confirmed = 0\n\t\t\tlet deaths = 0\n\t\t\tlet recovered = 0\n\t\t\tif (c === undefined) {\n\t\t\t\tconfirmed = d['All'].confirmed\n\t\t\t\tdeaths = d['All'].deaths\n\t\t\t\trecovered = d['All'].recovered\n\t\t\t} else if (c !== undefined && s === undefined) {\n\t\t\t\tconfirmed = d[c].confirmed\n\t\t\t\tdeaths = d[c].deaths\n\t\t\t\trecovered = d[c].recovered\n\t\t\t} else {\n\t\t\t\tconfirmed = d[c][s].confirmed\n\t\t\t\tdeaths = d[c][s].deaths\n\t\t\t\trecovered = d[c][s].recovered\n\t\t\t}\n\t\t\tlet t = {\n\t\t\t\ttotalCases: confirmed,\n\t\t\t\ttotalDeaths: deaths,\n\t\t\t\ttotalRecovered: recovered,\n\t\t\t}\n\t\t\ttotalsSet(t)\n\t\t\treturn t\n\t\t} catch {}\n\t}\n\n\t//Holds makeshift state and can be used to pass down to children\n\tconst state = {\n\t\toptions: {\n\t\t\tcountryValue: countryValue,\n\t\t\tcountryValueSet: countryValueSet,\n\t\t\tstateValue: stateValue,\n\t\t\tstateValueSet: stateValueSet,\n\t\t\tdateValue: dateValue,\n\t\t\tdateValueSet: dateValueSet,\n\t\t\tcountryList: countryList,\n\t\t\tstateList: stateList,\n\t\t},\n\t\ttables: {\n\t\t\ttableData: tableData,\n\t\t\tcountryValue: countryValue,\n\t\t\tcountryList: countryList,\n\t\t\tstateValue: stateValue,\n\t\t\tstateList: stateList,\n\t\t},\n\t\ttotals: totals,\n\t}\n\n\tuseEffect(() => {\n\t\tdefaultData()\n\t}, [dateValue])\n\n\tuseEffect(() => {\n\t\tif (countryValue === undefined) {\n\t\t\thandleTotals(totalsData)\n\t\t} else {\n\t\t\thandleTotals(totalsData, countryValue)\n\t\t}\n\t}, [countryValue])\n\n\tuseEffect(() => {\n\t\tif (stateValue === undefined) {\n\t\t\thandleTotals(totalsData, countryValue)\n\t\t} else {\n\t\t\thandleTotals(totalsData, countryValue, stateValue)\n\t\t}\n\t}, [stateValue])\n\n\treturn <App state={state} />\n}\n\nexport default State\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'react-virtualized/styles.css'\nimport State from './State'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.Fragment>\n\t\t<State />\n\t</React.Fragment>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}