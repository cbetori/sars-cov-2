{"version":3,"sources":["countries.js","components/Disclaimer.js","components/Options.js","components/Summary.js","components/Tables.js","App.js","State.js","serviceWorker.js","index.js"],"names":["initialCountryList","Disclaimer","props","id","className","href","Options","useState","provinceText","provinceTextSet","countryText","countryTextSet","onSearch","val","countries","state","countryList","map","e","i","Option","key","value","states","stateList","result","country","countryValue","push","province","changeCountryStateValue","type","stateValueSet","undefined","countryValueSet","onChange","curValue","document","getElementById","split","getElementsByTagName","style","setProperty","changeTheme","defaultValue","moment","dateValue","s","y","format","dateValueSet","handleDateChange","showSearch","optionFilterProp","Summary","title","totals","totalCases","totalRecovered","totalDeaths","Tables","window","innerWidth","tableWidth","tableWidthSet","tableArray","tableArraySet","compare","a","b","aState","confirmed","bState","comparison","handleTables","stateValue","newArray","tableData","length","tempArray","region","cities","sort","tableDivCounty","handleCountyTables","x","tableDivState","handleStateTables","tableDivCountry","handleCountryTables","formatNumber","num","toString","replace","array","tblHeight","rowHeight","width","header","height","headerHeight","rowCount","rowGetter","index","label","dataKey","cellDataGetter","rowData","useEffect","addEventListener","App","options","tables","State","subtract","dataCustomeDate","countryListSet","stateListSet","tableDataSet","totalsData","totalsDataSet","totalsSet","handleFetch","url","fetch","method","then","response","json","data","console","log","c","p","d","name","handleProvinceList","handleTotals","storage","totalData","localStorage","setItem","JSON","stringify","handleLocalData","local","deaths","recovered","t","getItem","parse","date","defaultData","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"gPAAaA,EAAqB,CACjC,KACA,SACA,iBACA,QACA,cACA,YACA,UACA,SACA,cACA,UACA,UACA,UACA,SACA,sBACA,YACA,UACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,SACA,UACA,yBACA,WACA,SACA,SACA,WACA,eACA,QACA,UACA,aACA,WACA,WACA,2BACA,OACA,QACA,WACA,sBACA,mBACA,aACA,gBACA,UACA,OACA,SACA,UACA,mBACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,UACA,WACA,WACA,OACA,UACA,QACA,SACA,UACA,UACA,QACA,SACA,UACA,YACA,SACA,gBACA,SACA,QACA,WACA,WACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,SACA,QACA,UACA,QACA,SACA,aACA,QACA,eACA,SACA,SACA,aACA,OACA,SACA,UACA,UACA,QACA,gBACA,YACA,aACA,aACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,YACA,SACA,UACA,SACA,WACA,aACA,UACA,aACA,UACA,QACA,cACA,YACA,QACA,UACA,kBACA,SACA,OACA,WACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,QACA,UACA,SACA,SACA,wBACA,cACA,mCACA,aACA,wBACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,UACA,eACA,cACA,QACA,YACA,QACA,WACA,SACA,cACA,QACA,UACA,WACA,WACA,cACA,OACA,sBACA,UACA,SACA,SACA,UACA,uBACA,UACA,aACA,YACA,UACA,qBACA,iBACA,SACA,Y,iBCzIcC,EA7CI,SAACC,GACnB,OACC,yBAAKC,GAAG,cACP,yBAAKA,GAAG,qBAAR,8IAIA,yBAAKA,GAAG,oBACP,yBAAKC,UAAU,wBAAf,gBACA,uBACCA,UAAU,2BACVC,KAAK,8CAFN,gBAMA,yBAAKD,UAAU,wBAAf,eACA,uBACCA,UAAU,2BACVC,KAAK,oFAFN,uBAMA,yBAAKF,GAAG,4BACP,yBAAKC,UAAU,wBAA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","file":"static/js/main.cad70fd1.chunk.js","sourcesContent":["export const initialCountryList = [\n\t'US',\n\t'Canada',\n\t'United Kingdom',\n\t'China',\n\t'Netherlands',\n\t'Australia',\n\t'Denmark',\n\t'France',\n\t'Afghanistan',\n\t'Albania',\n\t'Algeria',\n\t'Andorra',\n\t'Angola',\n\t'Antigua and Barbuda',\n\t'Argentina',\n\t'Armenia',\n\t'Austria',\n\t'Azerbaijan',\n\t'Bahamas',\n\t'Bahrain',\n\t'Bangladesh',\n\t'Barbados',\n\t'Belarus',\n\t'Belgium',\n\t'Belize',\n\t'Benin',\n\t'Bhutan',\n\t'Bolivia',\n\t'Bosnia and Herzegovina',\n\t'Botswana',\n\t'Brazil',\n\t'Brunei',\n\t'Bulgaria',\n\t'Burkina Faso',\n\t'Burma',\n\t'Burundi',\n\t'Cabo Verde',\n\t'Cambodia',\n\t'Cameroon',\n\t'Central African Republic',\n\t'Chad',\n\t'Chile',\n\t'Colombia',\n\t'Congo (Brazzaville)',\n\t'Congo (Kinshasa)',\n\t'Costa Rica',\n\t\"Cote d'Ivoire\",\n\t'Croatia',\n\t'Cuba',\n\t'Cyprus',\n\t'Czechia',\n\t'Diamond Princess',\n\t'Djibouti',\n\t'Dominica',\n\t'Dominican Republic',\n\t'Ecuador',\n\t'Egypt',\n\t'El Salvador',\n\t'Equatorial Guinea',\n\t'Eritrea',\n\t'Estonia',\n\t'Eswatini',\n\t'Ethiopia',\n\t'Fiji',\n\t'Finland',\n\t'Gabon',\n\t'Gambia',\n\t'Georgia',\n\t'Germany',\n\t'Ghana',\n\t'Greece',\n\t'Grenada',\n\t'Guatemala',\n\t'Guinea',\n\t'Guinea-Bissau',\n\t'Guyana',\n\t'Haiti',\n\t'Holy See',\n\t'Honduras',\n\t'Hungary',\n\t'Iceland',\n\t'India',\n\t'Indonesia',\n\t'Iran',\n\t'Iraq',\n\t'Ireland',\n\t'Israel',\n\t'Italy',\n\t'Jamaica',\n\t'Japan',\n\t'Jordan',\n\t'Kazakhstan',\n\t'Kenya',\n\t'Korea, South',\n\t'Kosovo',\n\t'Kuwait',\n\t'Kyrgyzstan',\n\t'Laos',\n\t'Latvia',\n\t'Lebanon',\n\t'Liberia',\n\t'Libya',\n\t'Liechtenstein',\n\t'Lithuania',\n\t'Luxembourg',\n\t'MS Zaandam',\n\t'Madagascar',\n\t'Malawi',\n\t'Malaysia',\n\t'Maldives',\n\t'Mali',\n\t'Malta',\n\t'Mauritania',\n\t'Mauritius',\n\t'Mexico',\n\t'Moldova',\n\t'Monaco',\n\t'Mongolia',\n\t'Montenegro',\n\t'Morocco',\n\t'Mozambique',\n\t'Namibia',\n\t'Nepal',\n\t'New Zealand',\n\t'Nicaragua',\n\t'Niger',\n\t'Nigeria',\n\t'North Macedonia',\n\t'Norway',\n\t'Oman',\n\t'Pakistan',\n\t'Panama',\n\t'Papua New Guinea',\n\t'Paraguay',\n\t'Peru',\n\t'Philippines',\n\t'Poland',\n\t'Portugal',\n\t'Qatar',\n\t'Romania',\n\t'Russia',\n\t'Rwanda',\n\t'Saint Kitts and Nevis',\n\t'Saint Lucia',\n\t'Saint Vincent and the Grenadines',\n\t'San Marino',\n\t'Sao Tome and Principe',\n\t'Saudi Arabia',\n\t'Senegal',\n\t'Serbia',\n\t'Seychelles',\n\t'Sierra Leone',\n\t'Singapore',\n\t'Slovakia',\n\t'Slovenia',\n\t'Somalia',\n\t'South Africa',\n\t'South Sudan',\n\t'Spain',\n\t'Sri Lanka',\n\t'Sudan',\n\t'Suriname',\n\t'Sweden',\n\t'Switzerland',\n\t'Syria',\n\t'Taiwan*',\n\t'Tanzania',\n\t'Thailand',\n\t'Timor-Leste',\n\t'Togo',\n\t'Trinidad and Tobago',\n\t'Tunisia',\n\t'Turkey',\n\t'Uganda',\n\t'Ukraine',\n\t'United Arab Emirates',\n\t'Uruguay',\n\t'Uzbekistan',\n\t'Venezuela',\n\t'Vietnam',\n\t'West Bank and Gaza',\n\t'Western Sahara',\n\t'Zambia',\n\t'Zimbabwe',\n]\n\nexport const initialCountryStateList = [\n\t{ Province_State: 'Alabama', Country_Region: 'US' },\n\t{ Province_State: 'Alaska', Country_Region: 'US' },\n\t{ Province_State: 'Alberta', Country_Region: 'Canada' },\n\t{ Province_State: 'Anguilla', Country_Region: 'United Kingdom' },\n\t{ Province_State: 'Anhui', Country_Region: 'China' },\n\t{ Province_State: 'Arizona', Country_Region: 'US' },\n\t{ Province_State: 'Arkansas', Country_Region: 'US' },\n\t{ Province_State: 'Aruba', Country_Region: 'Netherlands' },\n\t{\n\t\tProvince_State: 'Australian Capital Territory',\n\t\tCountry_Region: 'Australia',\n\t},\n\t{ Province_State: 'Beijing', Country_Region: 'China' },\n\t{ Province_State: 'Bermuda', Country_Region: 'United Kingdom' },\n\t{\n\t\tProvince_State: 'Bonaire, Sint Eustatius and Saba',\n\t\tCountry_Region: 'Netherlands',\n\t},\n\t{ Province_State: 'British Columbia', Country_Region: 'Canada' },\n\t{\n\t\tProvince_State: 'British Virgin Islands',\n\t\tCountry_Region: 'United Kingdom',\n\t},\n\t{ Province_State: 'California', Country_Region: 'US' },\n\t{ Province_State: 'Cayman Islands', Country_Region: 'United Kingdom' },\n\t{ Province_State: 'Channel Islands', Country_Region: 'United Kingdom' },\n\t{ Province_State: 'Chongqing', Country_Region: 'China' },\n\t{ Province_State: 'Colorado', Country_Region: 'US' },\n\t{ Province_State: 'Connecticut', Country_Region: 'US' },\n\t{ Province_State: 'Curacao', Country_Region: 'Netherlands' },\n\t{ Province_State: 'Delaware', Country_Region: 'US' },\n\t{ Province_State: 'Diamond Princess', Country_Region: 'Canada' },\n\t{ Province_State: 'Diamond Princess', Country_Region: 'US' },\n\t{ Province_State: 'District of Columbia', Country_Region: 'US' },\n\t{\n\t\tProvince_State: 'Falkland Islands (Malvinas)',\n\t\tCountry_Region: 'United Kingdom',\n\t},\n\t{ Province_State: 'Faroe Islands', Country_Region: 'Denmark' },\n\t{ Province_State: 'Florida', Country_Region: 'US' },\n\t{ Province_State: 'French Guiana', Country_Region: 'France' },\n\t{ Province_State: 'French Polynesia', Country_Region: 'France' },\n\t{ Province_State: 'Fujian', Country_Region: 'China' },\n\t{ Province_State: 'Gansu', Country_Region: 'China' },\n\t{ Province_State: 'Georgia', Country_Region: 'US' },\n\t{ Province_State: 'Gibraltar', Country_Region: 'United Kingdom' },\n\t{ Province_State: 'Grand Princess', Country_Region: 'Canada' },\n\t{ Province_State: 'Grand Princess', Country_Region: 'US' },\n\t{ Province_State: 'Greenland', Country_Region: 'Denmark' },\n\t{ Province_State: 'Guadeloupe', Country_Region: 'France' },\n\t{ Province_State: 'Guam', Country_Region: 'US' },\n\t{ Province_State: 'Guangdong', Country_Region: 'China' },\n\t{ Province_State: 'Guangxi', Country_Region: 'China' },\n\t{ Province_State: 'Guizhou', Country_Region: 'China' },\n\t{ Province_State: 'Hainan', Country_Region: 'China' },\n\t{ Province_State: 'Hawaii', Country_Region: 'US' },\n\t{ Province_State: 'Hebei', Country_Region: 'China' },\n\t{ Province_State: 'Heilongjiang', Country_Region: 'China' },\n\t{ Province_State: 'Henan', Country_Region: 'China' },\n\t{ Province_State: 'Hong Kong', Country_Region: 'China' },\n\t{ Province_State: 'Hubei', Country_Region: 'China' },\n\t{ Province_State: 'Hunan', Country_Region: 'China' },\n\t{ Province_State: 'Idaho', Country_Region: 'US' },\n\t{ Province_State: 'Illinois', Country_Region: 'US' },\n\t{ Province_State: 'Indiana', Country_Region: 'US' },\n\t{ Province_State: 'Inner Mongolia', Country_Region: 'China' },\n\t{ Province_State: 'Iowa', Country_Region: 'US' },\n\t{ Province_State: 'Isle of Man', Country_Region: 'United Kingdom' },\n\t{ Province_State: 'Jiangsu', Country_Region: 'China' },\n\t{ Province_State: 'Jiangxi', Country_Region: 'China' },\n\t{ Province_State: 'Jilin', Country_Region: 'China' },\n\t{ Province_State: 'Kansas', Country_Region: 'US' },\n\t{ Province_State: 'Kentucky', Country_Region: 'US' },\n\t{ Province_State: 'Liaoning', Country_Region: 'China' },\n\t{ Province_State: 'Louisiana', Country_Region: 'US' },\n\t{ Province_State: 'Macau', Country_Region: 'China' },\n\t{ Province_State: 'Maine', Country_Region: 'US' },\n\t{ Province_State: 'Manitoba', Country_Region: 'Canada' },\n\t{ Province_State: 'Martinique', Country_Region: 'France' },\n\t{ Province_State: 'Maryland', Country_Region: 'US' },\n\t{ Province_State: 'Massachusetts', Country_Region: 'US' },\n\t{ Province_State: 'Mayotte', Country_Region: 'France' },\n\t{ Province_State: 'Michigan', Country_Region: 'US' },\n\t{ Province_State: 'Minnesota', Country_Region: 'US' },\n\t{ Province_State: 'Mississippi', Country_Region: 'US' },\n\t{ Province_State: 'Missouri', Country_Region: 'US' },\n\t{ Province_State: 'Montana', Country_Region: 'US' },\n\t{ Province_State: 'Montserrat', Country_Region: 'United Kingdom' },\n\t{ Province_State: 'N/A', Country_Region: 'Afghanistan' },\n\t{ Province_State: 'N/A', Country_Region: 'Albania' },\n\t{ Province_State: 'N/A', Country_Region: 'Algeria' },\n\t{ Province_State: 'N/A', Country_Region: 'Andorra' },\n\t{ Province_State: 'N/A', Country_Region: 'Angola' },\n\t{ Province_State: 'N/A', Country_Region: 'Antigua and Barbuda' },\n\t{ Province_State: 'N/A', Country_Region: 'Argentina' },\n\t{ Province_State: 'N/A', Country_Region: 'Armenia' },\n\t{ Province_State: 'N/A', Country_Region: 'Austria' },\n\t{ Province_State: 'N/A', Country_Region: 'Azerbaijan' },\n\t{ Province_State: 'N/A', Country_Region: 'Bahamas' },\n\t{ Province_State: 'N/A', Country_Region: 'Bahrain' },\n\t{ Province_State: 'N/A', Country_Region: 'Bangladesh' },\n\t{ Province_State: 'N/A', Country_Region: 'Barbados' },\n\t{ Province_State: 'N/A', Country_Region: 'Belarus' },\n\t{ Province_State: 'N/A', Country_Region: 'Belgium' },\n\t{ Province_State: 'N/A', Country_Region: 'Belize' },\n\t{ Province_State: 'N/A', Country_Region: 'Benin' },\n\t{ Province_State: 'N/A', Country_Region: 'Bhutan' },\n\t{ Province_State: 'N/A', Country_Region: 'Bolivia' },\n\t{ Province_State: 'N/A', Country_Region: 'Bosnia and Herzegovina' },\n\t{ Province_State: 'N/A', Country_Region: 'Botswana' },\n\t{ Province_State: 'N/A', Country_Region: 'Brazil' },\n\t{ Province_State: 'N/A', Country_Region: 'Brunei' },\n\t{ Province_State: 'N/A', Country_Region: 'Bulgaria' },\n\t{ Province_State: 'N/A', Country_Region: 'Burkina Faso' },\n\t{ Province_State: 'N/A', Country_Region: 'Burma' },\n\t{ Province_State: 'N/A', Country_Region: 'Burundi' },\n\t{ Province_State: 'N/A', Country_Region: 'Cabo Verde' },\n\t{ Province_State: 'N/A', Country_Region: 'Cambodia' },\n\t{ Province_State: 'N/A', Country_Region: 'Cameroon' },\n\t{ Province_State: 'N/A', Country_Region: 'Central African Republic' },\n\t{ Province_State: 'N/A', Country_Region: 'Chad' },\n\t{ Province_State: 'N/A', Country_Region: 'Chile' },\n\t{ Province_State: 'N/A', Country_Region: 'Colombia' },\n\t{ Province_State: 'N/A', Country_Region: 'Congo (Brazzaville)' },\n\t{ Province_State: 'N/A', Country_Region: 'Congo (Kinshasa)' },\n\t{ Province_State: 'N/A', Country_Region: 'Costa Rica' },\n\t{ Province_State: 'N/A', Country_Region: \"Cote d'Ivoire\" },\n\t{ Province_State: 'N/A', Country_Region: 'Croatia' },\n\t{ Province_State: 'N/A', Country_Region: 'Cuba' },\n\t{ Province_State: 'N/A', Country_Region: 'Cyprus' },\n\t{ Province_State: 'N/A', Country_Region: 'Czechia' },\n\t{ Province_State: 'N/A', Country_Region: 'Denmark' },\n\t{ Province_State: 'N/A', Country_Region: 'Diamond Princess' },\n\t{ Province_State: 'N/A', Country_Region: 'Djibouti' },\n\t{ Province_State: 'N/A', Country_Region: 'Dominica' },\n\t{ Province_State: 'N/A', Country_Region: 'Dominican Republic' },\n\t{ Province_State: 'N/A', Country_Region: 'Ecuador' },\n\t{ Province_State: 'N/A', Country_Region: 'Egypt' },\n\t{ Province_State: 'N/A', Country_Region: 'El Salvador' },\n\t{ Province_State: 'N/A', Country_Region: 'Equatorial Guinea' },\n\t{ Province_State: 'N/A', Country_Region: 'Eritrea' },\n\t{ Province_State: 'N/A', Country_Region: 'Estonia' },\n\t{ Province_State: 'N/A', Country_Region: 'Eswatini' },\n\t{ Province_State: 'N/A', Country_Region: 'Ethiopia' },\n\t{ Province_State: 'N/A', Country_Region: 'Fiji' },\n\t{ Province_State: 'N/A', Country_Region: 'Finland' },\n\t{ Province_State: 'N/A', Country_Region: 'France' },\n\t{ Province_State: 'N/A', Country_Region: 'Gabon' },\n\t{ Province_State: 'N/A', Country_Region: 'Gambia' },\n\t{ Province_State: 'N/A', Country_Region: 'Georgia' },\n\t{ Province_State: 'N/A', Country_Region: 'Germany' },\n\t{ Province_State: 'N/A', Country_Region: 'Ghana' },\n\t{ Province_State: 'N/A', Country_Region: 'Greece' },\n\t{ Province_State: 'N/A', Country_Region: 'Grenada' },\n\t{ Province_State: 'N/A', Country_Region: 'Guatemala' },\n\t{ Province_State: 'N/A', Country_Region: 'Guinea' },\n\t{ Province_State: 'N/A', Country_Region: 'Guinea-Bissau' },\n\t{ Province_State: 'N/A', Country_Region: 'Guyana' },\n\t{ Province_State: 'N/A', Country_Region: 'Haiti' },\n\t{ Province_State: 'N/A', Country_Region: 'Holy See' },\n\t{ Province_State: 'N/A', Country_Region: 'Honduras' },\n\t{ Province_State: 'N/A', Country_Region: 'Hungary' },\n\t{ Province_State: 'N/A', Country_Region: 'Iceland' },\n\t{ Province_State: 'N/A', Country_Region: 'India' },\n\t{ Province_State: 'N/A', Country_Region: 'Indonesia' },\n\t{ Province_State: 'N/A', Country_Region: 'Iran' },\n\t{ Province_State: 'N/A', Country_Region: 'Iraq' },\n\t{ Province_State: 'N/A', Country_Region: 'Ireland' },\n\t{ Province_State: 'N/A', Country_Region: 'Israel' },\n\t{ Province_State: 'N/A', Country_Region: 'Italy' },\n\t{ Province_State: 'N/A', Country_Region: 'Jamaica' },\n\t{ Province_State: 'N/A', Country_Region: 'Japan' },\n\t{ Province_State: 'N/A', Country_Region: 'Jordan' },\n\t{ Province_State: 'N/A', Country_Region: 'Kazakhstan' },\n\t{ Province_State: 'N/A', Country_Region: 'Kenya' },\n\t{ Province_State: 'N/A', Country_Region: 'Korea, South' },\n\t{ Province_State: 'N/A', Country_Region: 'Kosovo' },\n\t{ Province_State: 'N/A', Country_Region: 'Kuwait' },\n\t{ Province_State: 'N/A', Country_Region: 'Kyrgyzstan' },\n\t{ Province_State: 'N/A', Country_Region: 'Laos' },\n\t{ Province_State: 'N/A', Country_Region: 'Latvia' },\n\t{ Province_State: 'N/A', Country_Region: 'Lebanon' },\n\t{ Province_State: 'N/A', Country_Region: 'Liberia' },\n\t{ Province_State: 'N/A', Country_Region: 'Libya' },\n\t{ Province_State: 'N/A', Country_Region: 'Liechtenstein' },\n\t{ Province_State: 'N/A', Country_Region: 'Lithuania' },\n\t{ Province_State: 'N/A', Country_Region: 'Luxembourg' },\n\t{ Province_State: 'N/A', Country_Region: 'MS Zaandam' },\n\t{ Province_State: 'N/A', Country_Region: 'Madagascar' },\n\t{ Province_State: 'N/A', Country_Region: 'Malawi' },\n\t{ Province_State: 'N/A', Country_Region: 'Malaysia' },\n\t{ Province_State: 'N/A', Country_Region: 'Maldives' },\n\t{ Province_State: 'N/A', Country_Region: 'Mali' },\n\t{ Province_State: 'N/A', Country_Region: 'Malta' },\n\t{ Province_State: 'N/A', Country_Region: 'Mauritania' },\n\t{ Province_State: 'N/A', Country_Region: 'Mauritius' },\n]\n","import React from 'react'\n\nconst Disclaimer = (props) => {\n\treturn (\n\t\t<div id='disclaimer'>\n\t\t\t<div id='disclaimer-detail'>\n\t\t\t\tDisclaimer: I do not own nor do I maintain this data. To ensure you are\n\t\t\t\tgetting the best information please look to authoritative sources.\n\t\t\t</div>\n\t\t\t<div id='disclaimer-links'>\n\t\t\t\t<div className='disclaimer-link-head'>Data source:</div>\n\t\t\t\t<a\n\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\thref='https://github.com/CSSEGISandData/COVID-19'\n\t\t\t\t>\n\t\t\t\t\tJohn Hopkins\n\t\t\t\t</a>\n\t\t\t\t<div className='disclaimer-link-head'>API Source:</div>\n\t\t\t\t<a\n\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\thref='https://rapidapi.com/axisbits-axisbits-default/api/covid-19-statistics/endpoints'\n\t\t\t\t>\n\t\t\t\t\tRapidAPI - Axisbits\n\t\t\t\t</a>\n\t\t\t\t<div id='disclaimer-authoritative'>\n\t\t\t\t\t<div className='disclaimer-link-head'>\n\t\t\t\t\t\tAdditional Support on Sars-Cov-2:\n\t\t\t\t\t</div>\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\t\thref='                https://www.cdc.gov/coronavirus/2019-nCov/index.html'\n\t\t\t\t\t>\n\t\t\t\t\t\tCDC\n\t\t\t\t\t</a>\n\t\t\t\t\t,\n\t\t\t\t\t<a\n\t\t\t\t\t\tclassName='disclaimer-links-address'\n\t\t\t\t\t\thref='https://www.who.int/emergencies/diseases/novel-coronavirus-2019'\n\t\t\t\t\t>\n\t\t\t\t\t\tWHO\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Disclaimer\n","import React, { useState } from 'react'\nimport { DatePicker, Select, Switch } from 'antd'\nimport moment from 'moment'\n\nconst Options = (props) => {\n\t//Props being received:\n\t//countryValue\n\t//stateValue\n\t//dateValue\n\tconst defaultProvinceValue = 'Select a state/province'\n\tconst [provinceText, provinceTextSet] = useState(defaultProvinceValue)\n\tconst defaultCountryValue = 'Select a Country'\n\tconst [countryText, countryTextSet] = useState(defaultCountryValue)\n\n\tlet changeTheme = () => {\n\t\tlet curValue = document.getElementById('theme').href\n\t\tcurValue = curValue.split('/')[3]\n\t\tif (curValue === 'antd.css') {\n\t\t\tdocument.getElementById('theme').href = 'antd.dark.css'\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--scrolltrack', '#141414')\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--border-color', '#303030')\n\t\t} else {\n\t\t\tdocument.getElementById('theme').href = 'antd.css'\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--scrolltrack', 'white')\n\t\t\tdocument\n\t\t\t\t.getElementsByTagName('body')[0]\n\t\t\t\t.style.setProperty('--border-color', '#f0f0f0')\n\t\t}\n\t}\n\n\tfunction onSearch(val) {}\n\n\tlet countries = props.state.countryList.map((e, i) => {\n\t\treturn (\n\t\t\t<Select.Option key={i} value={e}>\n\t\t\t\t{e}\n\t\t\t</Select.Option>\n\t\t)\n\t})\n\n\tlet states = props.state.stateList.map((e, i) => {\n\t\tlet result = []\n\t\tif (e.country === props.state.countryValue) {\n\t\t\tresult.push(\n\t\t\t\t<Select.Option key={i} value={e.province}>\n\t\t\t\t\t{e.province}\n\t\t\t\t</Select.Option>\n\t\t\t)\n\t\t}\n\t\treturn result\n\t})\n\n\tlet handleDateChange = (e, s) => {\n\t\tlet y = moment(s).format('YYYY-MM-DD')\n\t\tprops.state.dateValueSet(y)\n\t}\n\n\tlet changeCountryStateValue = (e, type) => {\n\t\tif (type === 'country') {\n\t\t\tif (e === 'All') {\n\t\t\t\tprops.state.stateValueSet(undefined)\n\t\t\t\tprops.state.countryValueSet(undefined)\n\t\t\t\tcountryTextSet(defaultCountryValue)\n\t\t\t\tprovinceTextSet(defaultProvinceValue)\n\t\t\t} else {\n\t\t\t\tprops.state.countryValueSet(e)\n\t\t\t\tcountryTextSet(e)\n\t\t\t\tprops.state.stateValueSet(undefined)\n\t\t\t\tprovinceTextSet(defaultProvinceValue)\n\t\t\t}\n\t\t} else {\n\t\t\tif (e === 'All') {\n\t\t\t\tprops.state.stateValueSet(undefined)\n\t\t\t\tprovinceTextSet(defaultProvinceValue)\n\t\t\t} else {\n\t\t\t\tprops.state.stateValueSet(e)\n\t\t\t\tprovinceTextSet(e)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<div id='options'>\n\t\t\t<div id='options-theme'>\n\t\t\t\t<Switch onChange={() => changeTheme()} />\n\t\t\t\tLight/Dark\n\t\t\t</div>\n\t\t\t<DatePicker\n\t\t\t\tdefaultValue={moment(props.state.dateValue, 'YYYY-MM-DD')}\n\t\t\t\tonChange={(e, s) => handleDateChange(e, s)}\n\t\t\t\tformat={'YYYY-MM-DD'}\n\t\t\t\tclassName='options-inputs'\n\t\t\t/>\n\t\t\t<Select\n\t\t\t\tshowSearch\n\t\t\t\toptionFilterProp='children'\n\t\t\t\tonSearch={onSearch}\n\t\t\t\tvalue={countryText}\n\t\t\t\tclassName='options-inputs'\n\t\t\t\tonChange={(e) => changeCountryStateValue(e, 'country')}\n\t\t\t>\n\t\t\t\t<Select.Option value={'All'}>All</Select.Option>\n\t\t\t\t{countries}\n\t\t\t</Select>\n\t\t\t<Select\n\t\t\t\tshowSearch\n\t\t\t\toptionFilterProp='children'\n\t\t\t\tonSearch={onSearch}\n\t\t\t\tvalue={provinceText}\n\t\t\t\tclassName='options-inputs'\n\t\t\t\tonChange={(e) => changeCountryStateValue(e, 'state')}\n\t\t\t>\n\t\t\t\t<Select.Option value={'All'}>All</Select.Option>\n\t\t\t\t{states}\n\t\t\t</Select>\n\t\t</div>\n\t)\n}\n\nexport default Options\n","import React from 'react'\nimport { Card, Statistic } from 'antd'\n\nconst Summary = (props) => {\n\treturn (\n\t\t<div id='summary'>\n\t\t\t<Card id='summary-card'>\n\t\t\t\t<Statistic title='Total Cases' value={props.totals.totalCases} />\n\t\t\t\t<Statistic title='Total Recoverd' value={props.totals.totalRecovered} />\n\t\t\t\t<Statistic title='Total Deaths' value={props.totals.totalDeaths} />\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default Summary\n","import React, { useEffect, useState } from 'react'\nimport { Column, Table, AutoSizer, InfiniteLoader } from 'react-virtualized'\nimport { Card } from 'antd'\n\nconst Tables = (props) => {\n\t//Props being received:\n\t//tableData\n\t//countryValue\n\t//stateValue\n\t/////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//Completed: Detail tables\n\t//In progress: Summary table\n\t//1. One \"Summary\" table (ex. If country chosen one table to total at highest level then tables for each state)\n\n\t/////////////////////////////////////////////////////////////////////////////////////////////////////\n\tconst [tableWidth, tableWidthSet] = useState(window.innerWidth * 0.75)\n\tconst [tableArray, tableArraySet] = useState([])\n\tfunction compare(a, b) {\n\t\tlet aState = a.confirmed\n\t\tlet bState = b.confirmed\n\t\tlet comparison = 0\n\t\tif (aState > bState) {\n\t\t\tcomparison = -1\n\t\t} else if (aState < bState) {\n\t\t\tcomparison = 1\n\t\t}\n\t\treturn comparison\n\t}\n\t/////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//Create proper array\n\t//IF STATE AND PROVINENCE ARE CHOSEN\n\tconst handleCountyTables = () => {\n\t\tlet newArray = []\n\t\tfor (let i = 0; i < props.state.tableData.length; i++) {\n\t\t\tlet tempArray = []\n\t\t\tlet result\n\t\t\tif (\n\t\t\t\tprops.state.tableData[i].country === props.state.countryValue &&\n\t\t\t\tprops.state.tableData[i].province === props.state.stateValue\n\t\t\t) {\n\t\t\t\tif (props.state.tableData[i].region.cities.length === 0) {\n\t\t\t\t\ttempArray.push(props.state.tableData[i])\n\t\t\t\t} else {\n\t\t\t\t\ttempArray = props.state.tableData[i].region.cities\n\t\t\t\t}\n\t\t\t\ttempArray.sort(compare)\n\t\t\t\tlet result = tableDivCounty(tempArray, i)\n\t\t\t\tnewArray.push(result)\n\t\t\t}\n\t\t}\n\t\treturn newArray\n\t}\n\n\t//IF JUST STATE/PROVINENCE IS CHOSEN\n\tconst handleStateTables = () => {\n\t\tlet newArray = []\n\t\tfor (let i = 0; i < props.state.stateList.length; i++) {\n\t\t\tlet tempArray = []\n\t\t\tfor (let x = 0; x < props.state.tableData.length; x++) {\n\t\t\t\tif (\n\t\t\t\t\tprops.state.tableData[x].province ===\n\t\t\t\t\t\tprops.state.stateList[i].province &&\n\t\t\t\t\tprops.state.countryValue === props.state.stateList[i].country\n\t\t\t\t) {\n\t\t\t\t\tif (props.state.tableData[x].region.cities.length === 0) {\n\t\t\t\t\t\ttempArray.push(props.state.tableData[x])\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttempArray = props.state.tableData[x].region.cities\n\t\t\t\t\t}\n\t\t\t\t\ttempArray.sort(compare)\n\t\t\t\t\tlet result = tableDivState(tempArray, x)\n\t\t\t\t\tnewArray.push(result)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn newArray\n\t}\n\t//IF NO STATE OR PROVINENCE ARE CHOSEN (GLOBAL VIEW)\n\tconst handleCountryTables = () => {\n\t\tlet newArray = []\n\t\tfor (let i = 0; i < props.state.countryList.length; i++) {\n\t\t\tlet tempArray = []\n\t\t\tfor (let x = 0; x < props.state.tableData.length; x++) {\n\t\t\t\tif (props.state.tableData[x].country === props.state.countryList[i]) {\n\t\t\t\t\ttempArray.push(props.state.tableData[x])\n\t\t\t\t}\n\t\t\t}\n\t\t\ttempArray.sort(compare)\n\t\t\tlet result = tableDivCountry(tempArray, i)\n\t\t\tnewArray.push(result)\n\t\t}\n\t\t// tableArraySet(newArray)\n\t\treturn newArray\n\t\t// createUniqueArray('country_region')\n\t}\n\t/////////////////////////////////////////////////////////////////////////////////////////////////////\n\t//Determine how to filter data\n\tconst handleTables = () => {\n\t\tif (\n\t\t\tprops.state.countryValue !== undefined &&\n\t\t\tprops.state.stateValue !== undefined\n\t\t) {\n\t\t\treturn handleCountyTables()\n\t\t} else if (\n\t\t\tprops.state.countryValue !== undefined &&\n\t\t\tprops.state.stateValue === undefined\n\t\t) {\n\t\t\treturn handleStateTables()\n\t\t} else if (\n\t\t\tprops.state.countryValue === undefined &&\n\t\t\tprops.state.stateValue === undefined\n\t\t) {\n\t\t\treturn handleCountryTables()\n\t\t}\n\t}\n\n\tconst formatNumber = (num) => {\n\t\ttry {\n\t\t\treturn num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n\t\t} catch {\n\t\t\treturn num\n\t\t}\n\t}\n\n\tconst tableDivCountry = (array, key) => {\n\t\tlet rowHeight = 30\n\t\tlet tblHeight\n\t\tif (array.length === 1) {\n\t\t\ttblHeight = 80\n\t\t} else {\n\t\t\ttblHeight = 30\n\t\t}\n\t\tif (window.innerWidth < 600) {\n\t\t\ttblHeight = tblHeight / 1.5\n\t\t\trowHeight = rowHeight / 1.5\n\t\t}\n\t\ttry {\n\t\t\treturn (\n\t\t\t\t<div key={key} className='tables-individual'>\n\t\t\t\t\t{/* <InfiniteLoader {...InfiniteLoader}>\n\t\t\t\t\t\t{({ onRowsRendered, registerChild }) => ( */}\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName='tables-virtualized'\n\t\t\t\t\t\twidth={tableWidth}\n\t\t\t\t\t\theader={'Country'}\n\t\t\t\t\t\theight={array.length * tblHeight}\n\t\t\t\t\t\theaderHeight={50}\n\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\trowCount={array.length}\n\t\t\t\t\t\trowGetter={({ index }) => array[index]}\n\t\t\t\t\t\t// onRowsRendered={onRowsRendered}\n\t\t\t\t\t\t// ref={registerChild}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Column width={tableWidth / 5} label='Country' dataKey='country' />\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Province / State'\n\t\t\t\t\t\t\tdataKey='province'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Confirmed'\n\t\t\t\t\t\t\tdataKey='confirmed'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Active'\n\t\t\t\t\t\t\tdataKey='active'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Deaths'\n\t\t\t\t\t\t\tdataKey='deaths'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Table>\n\t\t\t\t\t{/* )} */}\n\t\t\t\t\t{/* </InfiniteLoader> */}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} catch {}\n\t}\n\n\tconst tableDivState = (array, key) => {\n\t\tlet rowHeight = 30\n\t\tlet tblHeight\n\t\tif (array.length === 1) {\n\t\t\ttblHeight = 80\n\t\t} else {\n\t\t\ttblHeight = 30\n\t\t}\n\t\tif (window.innerWidth < 600) {\n\t\t\ttblHeight = tblHeight / 1.5\n\t\t\trowHeight = rowHeight / 1.5\n\t\t}\n\t\ttry {\n\t\t\treturn (\n\t\t\t\t<div key={key} className='tables-individual'>\n\t\t\t\t\t{/* <InfiniteLoader {...InfiniteLoader}>\n\t\t\t\t\t\t{({ onRowsRendered, registerChild }) => ( */}\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName='tables-virtualized'\n\t\t\t\t\t\twidth={tableWidth}\n\t\t\t\t\t\theader={'Country'}\n\t\t\t\t\t\theight={array.length * tblHeight}\n\t\t\t\t\t\theaderHeight={50}\n\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\trowCount={array.length}\n\t\t\t\t\t\trowGetter={({ index }) => array[index]}\n\t\t\t\t\t\t// onRowsRendered={onRowsRendered}\n\t\t\t\t\t\t// ref={registerChild}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Province / State'\n\t\t\t\t\t\t\tdataKey='province'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column width={tableWidth / 6} label='County' dataKey='name' />\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Confirmed'\n\t\t\t\t\t\t\tdataKey='confirmed'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 5}\n\t\t\t\t\t\t\tlabel='Deaths'\n\t\t\t\t\t\t\tdataKey='deaths'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Table>\n\t\t\t\t\t{/* )}\n\t\t\t\t\t</InfiniteLoader> */}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} catch {}\n\t}\n\n\tconst tableDivCounty = (array, key) => {\n\t\tlet rowHeight = 30\n\t\tlet tblHeight\n\t\tif (array.length === 1) {\n\t\t\ttblHeight = 80\n\t\t} else {\n\t\t\ttblHeight = 30\n\t\t}\n\n\t\tif (window.innerWidth < 600) {\n\t\t\ttblHeight = tblHeight / 1.5\n\t\t\trowHeight = rowHeight / 1.5\n\t\t}\n\t\ttry {\n\t\t\treturn (\n\t\t\t\t<div key={key} className='tables-individual'>\n\t\t\t\t\t{/* <InfiniteLoader {...InfiniteLoader}>\n\t\t\t\t\t\t{({ onRowsRendered, registerChild }) => ( */}\n\t\t\t\t\t<Table\n\t\t\t\t\t\tclassName='tables-virtualized'\n\t\t\t\t\t\twidth={tableWidth}\n\t\t\t\t\t\theader={'Country'}\n\t\t\t\t\t\theight={array.length * tblHeight}\n\t\t\t\t\t\theaderHeight={50}\n\t\t\t\t\t\trowHeight={rowHeight}\n\t\t\t\t\t\trowCount={array.length}\n\t\t\t\t\t\trowGetter={({ index }) => array[index]}\n\t\t\t\t\t\t// onRowsRendered={onRowsRendered}\n\t\t\t\t\t\t// ref={registerChild}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Column width={tableWidth / 4} label='County' dataKey='name' />\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 4}\n\t\t\t\t\t\t\tlabel='Confirmed'\n\t\t\t\t\t\t\tdataKey='confirmed'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\twidth={tableWidth / 4}\n\t\t\t\t\t\t\tlabel='Deaths'\n\t\t\t\t\t\t\tdataKey='deaths'\n\t\t\t\t\t\t\tcellDataGetter={({ rowData, dataKey }) =>\n\t\t\t\t\t\t\t\tformatNumber(rowData[dataKey])\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Table>\n\t\t\t\t\t{/* // \t)}\n\t\t\t\t\t// </InfiniteLoader> */}\n\t\t\t\t</div>\n\t\t\t)\n\t\t} catch {}\n\t}\n\n\tuseEffect(() => {\n\t\ttableArraySet(handleTables())\n\t}, [props])\n\n\twindow.addEventListener('resize', () => {\n\t\ttableWidthSet(window.innerWidth * 0.75)\n\t})\n\n\treturn <div id='tables'>{tableArray}</div>\n}\n\nexport default Tables\n","import React from 'react'\nimport Disclaimer from './components/Disclaimer'\nimport Options from './components/Options'\nimport Summary from './components/Summary'\nimport Tables from './components/Tables'\n\nconst App = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<Disclaimer />\n\t\t\t<Options state={props.state.options} />\n\t\t\t<Summary totals={props.state.totals} />\n\t\t\t<Tables state={props.state.tables} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React, { useEffect, useState } from 'react'\nimport { initialCountryList } from './countries'\nimport moment from 'moment'\nimport App from './App'\n\nconst State = () => {\n\tlet y = moment().subtract(1, 'days').format('YYYY-MM-DD')\n\n\tconst [dateValue, dateValueSet] = useState(y)\n\tconst dataDefault = '/api/default'\n\tconst dataCustomeDate = '/api/default/data=' + dateValue\n\n\tconst [countryList, countryListSet] = useState(initialCountryList)\n\tconst [stateList, stateListSet] = useState([])\n\n\tconst [countryValue, countryValueSet] = useState()\n\tconst [stateValue, stateValueSet] = useState()\n\n\tconst [tableData, tableDataSet] = useState([])\n\tconst [totalsData, totalsDataSet] = useState({})\n\tconst [totals, totalsSet] = useState({})\n\n\tfunction compare(a, b) {\n\t\tlet aState = a.province\n\t\tlet bState = b.province\n\t\tlet comparison = 0\n\t\tif (aState > bState) {\n\t\t\tcomparison = 1\n\t\t} else if (aState < bState) {\n\t\t\tcomparison = -1\n\t\t}\n\t\treturn comparison\n\t}\n\n\tlet handleProvinceList = (d) => {\n\t\ttry {\n\t\t\tlet result = d.map((e) => {\n\t\t\t\tif (e.region.province === '') {\n\t\t\t\t\treturn { country: e.region.name, province: e.region.name }\n\t\t\t\t} else {\n\t\t\t\t\treturn { country: e.region.name, province: e.region.province }\n\t\t\t\t}\n\t\t\t})\n\t\t\tlet p = result.sort(compare)\n\t\t\treturn p\n\t\t} catch {}\n\t}\n\n\tlet defaultData = () => {\n\t\tlet local = localStorage.getItem('storage')\n\t\tlocal = JSON.parse(local)\n\t\ttry {\n\t\t\tif (local.data[0].date === dateValue) {\n\t\t\t\tconsole.log('Local values used for query')\n\t\t\t\thandleLocalData(local)\n\t\t\t} else {\n\t\t\t\tif (dateValue === y) {\n\t\t\t\t\tconsole.log('Default data query fired')\n\t\t\t\t\thandleFetch(dataDefault)\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('Custome data query fired')\n\t\t\t\t\thandleFetch(dataCustomeDate)\n\t\t\t\t}\n\t\t\t}\n\t\t} catch {\n\t\t\tconsole.log('Error caught: Default data query fired')\n\t\t\thandleFetch(dataDefault)\n\t\t}\n\t}\n\n\tlet handleFetch = (url) => {\n\t\tfetch(url, {\n\t\t\tmethod: 'GET',\n\t\t})\n\t\t\t.then((response) => {\n\t\t\t\treturn response.json()\n\t\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tconsole.log(data)\n\t\t\t\tif (data.data.data !== null) {\n\t\t\t\t\tlet c = data.countries\n\t\t\t\t\tlet p = handleProvinceList(data.data.data)\n\t\t\t\t\thandleTotals(data.totals)\n\n\t\t\t\t\tcountryListSet(c)\n\t\t\t\t\tstateListSet(p)\n\t\t\t\t\ttotalsDataSet(data.totals)\n\t\t\t\t\ttableDataSet(data.data.data)\n\n\t\t\t\t\tlet storage = {\n\t\t\t\t\t\tcountry: c,\n\t\t\t\t\t\tprovince: p,\n\t\t\t\t\t\ttotalData: data.totals,\n\t\t\t\t\t\tdata: data.data.data,\n\t\t\t\t\t}\n\t\t\t\t\tlocalStorage.setItem('storage', JSON.stringify(storage))\n\t\t\t\t\treturn data\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tlet handleLocalData = (local) => {\n\t\tconsole.log(local)\n\t\tcountryListSet(local.country)\n\t\tstateListSet(local.province)\n\t\ttotalsDataSet(local.totalData)\n\t\thandleTotals(local.totalData)\n\t\ttableDataSet(local.data)\n\t}\n\n\t//d is tableData\n\t//Key can be \"province\" or \"country\"\n\t//Filter is either stateValue or countryValue\n\tlet handleTotals = (d, c, s) => {\n\t\ttry {\n\t\t\tlet confirmed = 0\n\t\t\tlet deaths = 0\n\t\t\tlet recovered = 0\n\t\t\tif (c === undefined) {\n\t\t\t\tconfirmed = d['All'].confirmed\n\t\t\t\tdeaths = d['All'].deaths\n\t\t\t\trecovered = d['All'].recovered\n\t\t\t} else if (c !== undefined && s === undefined) {\n\t\t\t\tconfirmed = d[c].confirmed\n\t\t\t\tdeaths = d[c].deaths\n\t\t\t\trecovered = d[c].recovered\n\t\t\t} else {\n\t\t\t\tconfirmed = d[c][s].confirmed\n\t\t\t\tdeaths = d[c][s].deaths\n\t\t\t\trecovered = d[c][s].recovered\n\t\t\t}\n\t\t\tlet t = {\n\t\t\t\ttotalCases: confirmed,\n\t\t\t\ttotalDeaths: deaths,\n\t\t\t\ttotalRecovered: recovered,\n\t\t\t}\n\t\t\ttotalsSet(t)\n\t\t\treturn t\n\t\t} catch {}\n\t}\n\n\tconst state = {\n\t\toptions: {\n\t\t\tcountryValue: countryValue,\n\t\t\tcountryValueSet: countryValueSet,\n\t\t\tstateValue: stateValue,\n\t\t\tstateValueSet: stateValueSet,\n\t\t\tdateValue: dateValue,\n\t\t\tdateValueSet: dateValueSet,\n\t\t\tcountryList: countryList,\n\t\t\tstateList: stateList,\n\t\t},\n\t\ttables: {\n\t\t\ttableData: tableData,\n\t\t\tcountryValue: countryValue,\n\t\t\tcountryList: countryList,\n\t\t\tstateValue: stateValue,\n\t\t\tstateList: stateList,\n\t\t},\n\t\ttotals: totals,\n\t}\n\n\tuseEffect(() => {\n\t\tdefaultData()\n\t}, [dateValue])\n\n\tuseEffect(() => {\n\t\tif (countryValue === undefined) {\n\t\t\thandleTotals(totalsData)\n\t\t} else {\n\t\t\thandleTotals(totalsData, countryValue)\n\t\t}\n\t}, [countryValue])\n\n\tuseEffect(() => {\n\t\tif (stateValue === undefined) {\n\t\t\thandleTotals(totalsData, countryValue)\n\t\t} else {\n\t\t\thandleTotals(totalsData, countryValue, stateValue)\n\t\t}\n\t}, [stateValue])\n\n\treturn <App state={state} />\n}\n\nexport default State\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'react-virtualized/styles.css'\nimport State from './State'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<State />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}